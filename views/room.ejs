<a href="/">Back to home</a>
<h2>ROOM: <%- room.room_name %></h2>
<h4>Room ID: <%- room.roomid %></h4>
<form action="/leave" method="POST">
	<input type="text" name="roomId" id="roomId" value="<%= room.roomid %>" hidden>
	<input type="submit" value="Leave room">
</form>
<div id="chat">
	<div id="messages"></div>
	<form id="send-message-form" method="POST">
		<input type="text" name="message" id="message-input" placeholder="Message" autocomplete="off">
		<input type="submit" id="send-message" value="Send">
	</form>
</div>

<script src="./js/socket.io/socket.io.js"></script>
<script>
	const socket = io();
	const roomid =  "<%- room.roomid %>";
	const username = "<%- username %>";

	socket.emit("join", {username, roomid})

	const messagesElement = document.querySelector("#messages");
	const sendMessageForm = document.querySelector("#send-message-form");
	const messageInput = document.querySelector("#message-input");

	sendMessageForm.addEventListener("submit", e => {
		e.preventDefault();
		const message = messageInput.value.trim();

		if(message) {
			socket.emit("chat message", {username ,message});
			messageInput.value = "";
		}
	});

	socket.on('chat message', function(messageObj) {
		const time = new Date(messageObj.sent_at);
		const username = messageObj.username;
		const content = messageObj.content;

		const formatedTime = formatTime(time);
		createMessageElement(username, formatedTime, content);
	});

	socket.on("join", messageObjs => {
		messageObjs.forEach(messageObj => {
			const time = new Date(messageObj.sent_at);
			const username = messageObj.username;
			const content = messageObj.content;

			const formatedTime = formatTime(time);
			createMessageElement(username, formatedTime, content);
		})
	})

	socket.on("load old messages error", message => {
		createMessageElement("", "", message);
	})

	socket.on("send message error", message => {
		createMessageElement("", "", message);
	})

	function createMessageElement(username, time, content) {
		const messageElement = document.createElement("div");
		const userElement = document.createElement("span");
		const timeElement = document.createElement("span");
		const contentElement = document.createElement("p");

		
		messageElement.className = "message";
		userElement.className = "username";
		timeElement.className = "time";
		contentElement.className = "content";
		
		messageElement.appendChild(userElement);
		messageElement.appendChild(timeElement);
		messageElement.appendChild(contentElement);
		
		userElement.textContent = username;
		timeElement.textContent = time;

		contentElement.textContent = content;

		messagesElement.appendChild(messageElement);
	}

	function formatTime(time) {
		const sentMonth = time.getMonth() + 1;
		const sentDate = time.getDate();
		const sentYear = time.getFullYear();
		const sentHour = time.getHours();
		const sentMinute = time.getMinutes();

		const now = new Date(Date.now());
		const currentMonth = now.getMonth() + 1;
		const currentDate = now.getDate();
		const currentYear = now.getFullYear();

		if(sentMonth == currentMonth && sentDate == currentDate && sentYear == currentYear) {
			return `Today at ${padTwoDigits(sentHour)}:${padTwoDigits(sentMinute)}`;
		}
		else if(sentMonth == currentMonth && sentDate == currentDate - 1 && sentYear == currentYear) {
			return `Yesterday at ${padTwoDigits(sentHour)}:${padTwoDigits(sentMinute)}`;
		}
		else {
			return `${padTwoDigits(sentMonth)}/${padTwoDigits(sentDate)}/${sentYear}`;
		}
	}

	function padTwoDigits(num) {
		num = num.toString();
		while (num.length < 2) {
			num = "0" + num;
		}

		return num;
	}

</script>
